Convert 1012 to decimal
4 + 0 + 1 = 5
Convert 10101012 to decimal
64+ 0 + 16 + 0 + 4 + 0 + 1 = 85
Convert 01010102 to decimal
0 + 32 + 0 + 8 + 0 + 2 + 0 = 42
Convert 111111112 to decimal
128 + 64 + 32 + 16 + 8 + 4 + 2 + 1 = 255
Convert 11001100110011012 to decimal
32,768 + 16,384 + 0 + 0 + 2,048 + 1024 + 0 + 0 + 128 + 64 + 0 + 16 + 8 + 0 + 0 + 1 = 52,441
Convert 111111111111111111112 to decimal
Iâ€™m going to try this in reverse order (starting from lowest because they are allone and so large)
20 binary digits long
1 + 2 + 4 + 8 + 16 + 32 + 64 + 128 + 256 + 512 + 1024 +2048 + 4096 + 8192 + 16384 + 32768 +65,536 + 131,072 + 262,144 + 524,288 = 1,048,575
I just realized that for any binary digit in a binary number, all if all of the digits before it are 1, they all add up to that digit -1. So for this one, 20 binary digits all set to 1 give 1,048,575, but setting ONLY the 21st binary digit to 1 returns 1,048,576 (one more) 
Which seems obvious now that I think about it
Convert 1111000011112 to decimal
2048 + 1024 + 512 + 256 + 0 + 0 + 0 + 0 + 8 + 4 + 2 + 1 = 3,855
Convert 1000000000002 to decimal
2^11 = 2048
Convert 1010101111001101111011112 to decimal
24 binary digits
8,388,608 + 0 + 2,097,152 + 0 + 524,288 + 0 + 131,072 + 65,536 + 32,768 + 16,384 + 0 + 0 +2,048 + 1,024 + 0 + 256 + 128 + 64 + 32 + 0 + 8 + 4 + 2 + 1 = 10,485,760
Convert 542110 to binary
Find the highest square and subtract going down the list of squares of 2 one by one
5421 - 4096 = 1325 - 1,024 = 301 - 256 = 45 -32 = 13 - 8 = 5 -4 = 1 -1 = 0
1010100101101
Convert 8010 to binary
80-64 = 16 - 16 = 0
1010000
Convert 1234510 to binary
12,345 - 8,192 = 4153 - 4096 = 57-32 = 25 - 16 = 9 -8 = 1 - 1 = 1
11000000111001
Convert 1510 to binary
1111 (every value below the 16 correlating binary index)
Convert 6553510 to binary
1111111111111111 (same as above but for 65536)
Convert 3276710 to binary
111111111111111 (same again for 32768)
